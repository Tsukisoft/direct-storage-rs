on:
  push:
  pull_request:

env:
  DIRECTSTORAGE_VERSION: 1.2.2

jobs:
  rust:
    name: Lint Rust code
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download DirectStorage NuGet package
        run: |
          mkdir .tmp
          curl -L https://www.nuget.org/api/v2/package/Microsoft.Direct3D.DirectStorage/$env:DIRECTSTORAGE_VERSION -o .tmp/microsoft.direct3d.directstorage.$env:DIRECTSTORAGE_VERSION.nupkg
          unzip .tmp/microsoft.direct3d.directstorage.$env:DIRECTSTORAGE_VERSION.nupkg -d .tmp
          $arch="${{ runner.arch }}".ToLower()
          # Place DLLs in $PWD so that the binaries can run
          cp .tmp/native/bin/$arch/*.dll .
          # Make link libraries available to the linker (this could also be done by copying them to $PWD)
          echo "RUSTFLAGS=-Lnative=.tmp/native/lib/$arch" >> $env:GITHUB_ENV

      - name: Cargo fmt
        run: cargo fmt --all -- --check
      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets -- -D warnings
      - name: Cargo test
        run: cargo test --workspace

      - name: Install nightly Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Generate lockfile with minimal dependency versions
        run: cargo generate-lockfile -Zminimal-versions

      - name: Install Rust at MSRV
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.74
          components: clippy

      - name: Cargo clippy with minimal-versions
        run: cargo clippy --workspace --all-targets --exclude api_gen -- -D warnings

  generate-winmd:
    name: Generate winmd
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - name: Clean
        run: Remove-Item -Recurse -Force -ErrorAction SilentlyContinue .windows/winmd/
      - name: Configure environment
        shell: pwsh
        run: |
          "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64" >> $env:GITHUB_PATH
          ((Resolve-Path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\*\bin\Hostx64\x64")
            | Sort-Object -Descending | Select -First 1).ToString() >> $env:GITHUB_PATH
      - name: Generate
        run: dotnet build .metadata
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: metadata
          path: .windows/winmd

  generate-rust:
    name: Generate Rust crate
    runs-on: ubuntu-latest
    needs: generate-winmd
    steps:
      - uses: actions/checkout@v4
      - name: Clean
        run: rm -rf .windows/winmd/ src/Microsoft_Direct3D_DirectStorage.rs
      - name: Download winmd
        uses: actions/download-artifact@v4
        with:
          name: metadata
          path: .windows/winmd
      - name: Generate
        run: cargo r -p api_gen
      - name: Upload crate source
        uses: actions/upload-artifact@v4
        with:
          name: crate-source
          path: src/
      - name: Diff generated Rust code
        run: test -z "$(git status --porcelain -- ':!.windows')" || (echo "::error::Generated files are different, please regenerate with cargo run -p api_gen!"; git status; false)
